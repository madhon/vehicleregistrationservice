name: Docker Build & Publish to ghcr.io

on:
  push:
    branches: [ master ]
    tags: [ 'v*.*' ]
  pull_request:
  workflow_dispatch:

permissions: read-all

env:
  HUSKY : 0
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=sha
          labels: |
            maintainer=Madhon
            org.opencontainers.image.title=VehicleRegistrationService
            org.opencontainers.image.description=Vehicle Registration Service Test
            org.opencontainers.image.vendor=Madhon

      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker
          platforms: linux/amd64

      - name: Log into GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ./VehicleRegistrationService
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Scan Docker image (Anchore)
        uses: anchore/scan-action@v6
        id: anchore-scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          output-format: 'sarif'

      - name: Upload Anchore results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.anchore-scan.outputs.sarif }}
          
          
      - name: Scan Docker Image (Trivy)
        id: trivy-scan
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

