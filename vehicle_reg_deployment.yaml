# Namespace
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: vehicleregistration
  name: vehicleregistration-namespace

# Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vehicleregistration
    app.kubernetes.io/name: vehicleregistration-deployment
    app.kubernetes.io/part-of: vehicleregistration
    app.kubernetes.io/version: "0.13"
  name: vehicleregistration
  namespace: vehicleregistration-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vehicleregistration
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: vehicleregistration
    spec:
      containers:
      - image: ghcr.io/madhon/vehicleregistrationservice:latest
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
        name: vehicleregistration
        ports:
        - containerPort: 8080
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8080
        resources:
          limits:
            cpu: 500m
            memory: 1028Mi
          requests:
            cpu: 250m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          runAsGroup: 2000
          runAsNonRoot: true
          runAsUser: 1000
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /health/startup
            port: 8080
          periodSeconds: 10


# Service
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: vehicleregistration-service
    app.kubernetes.io/part-of: vehicleregistration
    app.kubernetes.io/version: "0.13"
  name: vehicleregistration
  namespace: vehicleregistration-namespace
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: vehicleregistration


# ingress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations: null
  labels:
    app.kubernetes.io/name: vehicleregistration-ingress
    app.kubernetes.io/part-of: vehicleregistration
    app.kubernetes.io/version: "0.13"
  name: vehicleregistration-ingress
  namespace: vehicleregistration-namespace
spec:
  rules:
  - host: vehicle-127.0.0.1.nip.io
    http:
      paths:
      - backend:
          service:
            name: vehicleregistration
            port:
              number: 80
        path: /
        pathType: Prefix